// Generated by CoffeeScript 1.7.1
(function() {
  var phantomProxy,
    __slice = [].slice;

  phantomProxy = require("phantom-proxy");

  module.exports = function(url, cb) {
    var start;
    start = Date.now();
    return phantomProxy.create({}, function(proxy) {
      var page;
      console.log('url', url);
      page = proxy.page;
      return page.set("viewportSize", {
        width: 320,
        height: 480
      }, function(result) {
        console.log(result.toString().cyan);
        return page.open(url, function() {
          return page.waitForSelector("body", function() {
            console.log("body tag present");
            return page.evaluate(function() {
              var $section, dump, indent;
              indent = '';
              dump = function(ele) {
                indent += '  ';
                console.log(indent, ele.tagName, '#' + $(ele).attr('id'), '"' + $(ele).attr('class') + '"');
                $(ele).children().each(function() {
                  return dump(this);
                });
                return indent = indent.slice(0, -2);
              };
              $section = $('section.forecast');
              return dump($section[0]);
            }, function() {
              var args;
              args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
              console.log('dump result', args);
              return proxy.end(function() {
                console.log("done", Math.round((Date.now() - start) / 1000));
                return cb();
              });
            });
          });
        });
      });
    });
  };

}).call(this);

//# sourceMappingURL=scrape.map
