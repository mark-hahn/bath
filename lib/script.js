// Generated by CoffeeScript 1.7.1
(function() {
  var dateMS, dayIdx, div, dowColor, flash, img, large, lastHour, medium, raw, refreshCurAndTime, refreshFore, refreshSize, render, small;

  render = teacup.render, div = teacup.div, raw = teacup.raw, img = teacup.img;

  large = medium = small = null;

  (refreshSize = function() {
    var bodyWid, hdrId, _i, _j, _len, _len1, _ref, _ref1, _results;
    bodyWid = $('body').width();
    large = (bodyWid / 4) + 'px';
    medium = (bodyWid / 6) + 'px';
    small = (bodyWid / 12) + 'px';
    _ref = ['high'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      hdrId = _ref[_i];
      $('#' + hdrId).css({
        fontSize: large
      });
    }
    _ref1 = ['rain', 'humidity', 'dayOfWeek', 'phrase'];
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      hdrId = _ref1[_j];
      _results.push($('#' + hdrId).css({
        fontSize: small
      }));
    }
    return _results;
  })();

  setInterval(refreshSize, 1000);

  dayIdx = null;

  refreshFore = function() {
    return $.getJSON('/forecast', {
      dayIdx: dayIdx
    }, function(data) {
      var dayOfWeek, high, humidity, iconURL, phrase, rain, wind;
      iconURL = data.iconURL, high = data.high, phrase = data.phrase, rain = data.rain, wind = data.wind, humidity = data.humidity, dayOfWeek = data.dayOfWeek;
      return $('#forecast').replaceWith(render(function() {
        return div('#forecast', {
          style: 'clear:both; float:left; width:100%; height:45%'
        }, function() {
          div('#row1', {
            style: 'clear:both; float:left; margin-top:5%; width:100%; height:50%'
          }, function() {
            div({
              style: 'clear:both; float:left; margin-left:2%; position: relative; left: 5%; width:35%; height:100%'
            }, function() {
              return img({
                style: 'width:100%; height:100%',
                src: iconURL
              });
            });
            return div({
              style: 'float:right; text-align:right; color:white; position:relative; top:1%; width:40%; margin-right:10%;'
            }, function() {
              return div('#high', function() {
                return raw(Math.ceil(high));
              });
            });
          });
          div('#row2', {
            style: 'clear:both; float:left; margin-top:3%; color:white; width:100%; height:20%'
          }, function() {
            div({
              style: 'clear:both; float:left; margin-left:10%; width:45%'
            }, function() {
              return div('#dayOfWeek', (dayOfWeek ? dayOfWeek : ''));
            });
            return div({
              style: 'float:right; margin-right:10%; width:35%; text-align:right'
            }, function() {
              return div('#humidity', (humidity ? humidity + '%' : ''));
            });
          });
          div('#row3', {
            style: 'clear:both; float:left;  margin-top:3%; margin-bottom:3%; color:white; width:100%; height:20%'
          }, function() {
            div({
              style: 'clear:both; float:left; margin-left:10%; width:48%'
            }, function() {
              return div('#phrase', function() {
                return raw((phrase ? phrase.replace(/\s/g, '&nbsp;') : ''));
              });
            });
            div({
              style: 'float:right; margin-right:10%; width:32%; text-align:right'
            }, function() {
              return div('#rain', (rain != null ? rain + '"' : ''));
            });
            return div({
              style: 'clear:both'
            });
          });
          return div({
            style: 'height:3%'
          }, '&nbsp;');
        });
      }));
    });
  };

  flash = 'no';

  dateMS = '';

  refreshCurAndTime = function() {
    var date, dow, dowStr, hour, mins;
    $.get('/cumulus/realtime.txt', function(data) {
      var avgWind, gust, hum, rtData, temp;
      rtData = data.split(' ');
      temp = rtData[2];
      hum = rtData[3];
      avgWind = Math.round(rtData[5]);
      gust = Math.round(rtData[40]);
      return $('#current').replaceWith(render(function() {
        return div('#current', {
          style: 'clear:both; float:left; position:relative; top:8%; width:100%; height:36%'
        }, function() {
          return div({
            style: 'clear:both; float:left; margin:10% 0 2% 10%; color:white; font-size:' + medium
          }, function() {
            return raw(temp + '&deg; &nbsp; ' + hum + '%');
          });
        });
      }));
    });
    $.getJSON('/cumulus/flash', function(data) {
      return flash = data.flash, dateMS = data.dateMS, data;
    });
    date = new Date();
    dow = date.getDay();
    dowStr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][dow];
    $('#dow').css({
      fontSize: medium
    }).text(dowStr);
    date = new Date(+dateMS);
    hour = ['12', ' 1', ' 2', ' 3', ' 4', ' 5', ' 6', ' 7', ' 8', ' 9', '10', '11'][date.getHours() % 12];
    mins = '' + date.getMinutes();
    if (mins.length < 2) {
      mins = '0' + mins;
    }
    return $('#time').css({
      fontSize: medium
    }).html(hour + ':' + mins + '<br>&nbsp;<br>&nbsp;');
  };

  lastHour = null;

  setInterval(function() {
    var date, hour;
    date = new Date();
    hour = date.getHours();
    if (lastHour !== hour) {
      lastHour = hour;
      refreshFore();
    }
    return refreshCurAndTime();
  }, 5000);

  dowColor = 'white';

  setInterval(function() {
    $('#dow').css({
      color: dowColor
    });
    if (flash === 'yes') {
      if (dowColor === 'white') {
        return dowColor = 'blue';
      } else {
        return dowColor = 'white';
      }
    } else {
      return dowColor = 'white';
    }
  }, 1000);

  $(function() {
    var dayTimeout;
    $('body').on('click', '#dow', function() {
      flash = 'no';
      dowColor = 'red';
      $('#dow').css({
        color: dowColor
      });
      setTimeout(function() {
        dowColor = 'white';
        return $('#dow').css({
          color: dowColor
        });
      }, 1000);
      return $.get('/cumulus/flash', {
        clear: 1
      });
    });
    refreshCurAndTime();
    dayTimeout = null;
    return $('body').on('click', '#forecast', function() {
      var clrDayTimeout;
      if (dayIdx == null) {
        dayIdx = 0;
      }
      clrDayTimeout = function() {
        dayIdx = null;
        refreshFore();
        if (dayTimeout) {
          clearTimeout(dayTimeout);
          return dayTimeout = null;
        }
      };
      if (dayTimeout) {
        clearTimeout(dayTimeout);
      }
      dayTimeout = setTimeout(clrDayTimeout, 10 * 1000);
      if (dayIdx++ > 2) {
        return clrDayTimeout();
      } else {
        return refreshFore();
      }
    });
  });

}).call(this);

//# sourceMappingURL=script.map
